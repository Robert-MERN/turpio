import React, { useEffect } from 'react'
import Head from 'next/head';
import AppNavbar from '../../components/AppNavbar'
import useStateContext from '../../context/ContextProvider';

import EditCreateEventOneOnOne from '../../components/createEvent/editEvents/EditCreateEventOneOnOne';
import EditCreateEventHotel from '../../components/createEvent/editEvents/EditCreateEventHotel';
import EditCreateEventSport from '../../components/createEvent/editEvents/EditCreateEventSport';
import EditCreateEventTeam from '../../components/createEvent/editEvents/EditCreateEventTeam';

import EditOneOnOneScheduleAvailability from '../../components/availability/editAvailabilities/EditOneOnOneScheduleAvailability';
import EditHotelScheduleAvailability from '../../components/availability/editAvailabilities/EditHotelScheduleAvailability';
import EditSportScheduleAvailability from '../../components/availability/editAvailabilities/EditSportScheduleAvailability';
import EditTeamScheduleAvailability from '../../components/availability/editAvailabilities/EditTeamScheduleAvailability';


import { getCookie } from "cookies-next"
import jwt from "jsonwebtoken";


const id = ({ user }) => {
    const { editEvent, handelEditEventTab, setCookieUser, setAllSchedule } = useStateContext();
    useEffect(() => {
        // setting logged-in user from cookie in contextAPI 
        setCookieUser(user);
        // setting users availability
        setAllSchedule(user.availability);
    }, []);
    return (
        <div className='w-screen h-screen' >
            <Head>
                <title>{`Working Hours - Edit ${"One-on-One Event Type"} - Turpio`}</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/images/logo.png" />
            </Head>
            <AppNavbar
                pageTitle={`Edit ${"One-on-One Event Type"}`}
                disableSecondControl={true}
                backBtn={true}
                backBtnNavigate="/home"
            />
            <div className='w-screen min-h-screen py-32 flex items-center flex-col gap-4' >
                <EditCreateEventOneOnOne
                    setEditEvent={() => handelEditEventTab("create")}
                    editEvent={editEvent.create}
                />
                <EditOneOnOneScheduleAvailability
                    setEditEvent={() => handelEditEventTab("availability")}
                    editEvent={editEvent.availability}
                />
                {/* <EditPayment
                    setEditEvent={() => handelEditEventTab("payment")}
                    editEvent={editEvent.payment}
                /> */}
            </div>


        </div>
    )
}

export default id


export const getServerSideProps = async function ({ req, res }) {
    const userToken = getCookie("userAccountToken", { req, res });
    if (!userToken) {
        return {
            redirect: {
                destination: '/login?redirect_url=' + req.url,
                permanent: true,
            },
        }
    } else {
        const user = jwt.verify(userToken, process.env.JWT_KEY)
        return {
            props: { user },
        }
    }
}